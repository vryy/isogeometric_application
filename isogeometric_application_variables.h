//
//   Project Name:        KratosIsogeometricApplication
//   Last Modified by:    $Author: hbui $
//   Date:                $Date: Aug 18, 2013 $
//
//

#if !defined(KRATOS_ISOGEOMETRIC_APPLICATION_VARIABLES_H_INCLUDED )
#define  KRATOS_ISOGEOMETRIC_APPLICATION_VARIABLES_H_INCLUDED

// System includes
#include <string>
#include <iostream>

// External includes

// Project includes
#include "includes/define.h"
#include "includes/ublas_interface.h"
#include "custom_utilities/control_point.h"

namespace Kratos
{

typedef ControlPoint<double, double> ControlPointType;
typedef ControlPoint<std::complex<double>, double> ComplexControlPointType;

// Variables definition
KRATOS_DEFINE_APPLICATION_VARIABLE( ISOGEOMETRIC_APPLICATION, double, NURBS_WEIGHT )
KRATOS_DEFINE_APPLICATION_VARIABLE( ISOGEOMETRIC_APPLICATION, Vector, NURBS_WEIGHTS )
KRATOS_DEFINE_APPLICATION_VARIABLE( ISOGEOMETRIC_APPLICATION, Vector, NURBS_KNOTS_1 )
KRATOS_DEFINE_APPLICATION_VARIABLE( ISOGEOMETRIC_APPLICATION, Vector, NURBS_KNOTS_2 )
KRATOS_DEFINE_APPLICATION_VARIABLE( ISOGEOMETRIC_APPLICATION, Vector, NURBS_KNOTS_3 )
KRATOS_DEFINE_APPLICATION_VARIABLE( ISOGEOMETRIC_APPLICATION, int, NURBS_DEGREE_1 )
KRATOS_DEFINE_APPLICATION_VARIABLE( ISOGEOMETRIC_APPLICATION, int, NURBS_DEGREE_2 )
KRATOS_DEFINE_APPLICATION_VARIABLE( ISOGEOMETRIC_APPLICATION, int, NURBS_DEGREE_3 )
KRATOS_DEFINE_APPLICATION_VARIABLE( ISOGEOMETRIC_APPLICATION, int, NURBS_DIMENSION_1 ) //number of control points in 1st direction
KRATOS_DEFINE_APPLICATION_VARIABLE( ISOGEOMETRIC_APPLICATION, int, NURBS_DIMENSION_2 ) //number of control points in 2nd direction
KRATOS_DEFINE_APPLICATION_VARIABLE( ISOGEOMETRIC_APPLICATION, int, NURBS_DIMENSION_3 ) //number of control points in 3rd direction
KRATOS_DEFINE_APPLICATION_VARIABLE( ISOGEOMETRIC_APPLICATION, int, NUM_DIVISION_1 ) //number of mesh points along 1st direction in post-processing
KRATOS_DEFINE_APPLICATION_VARIABLE( ISOGEOMETRIC_APPLICATION, int, NUM_DIVISION_2 ) //number of mesh points along 2nd direction in post-processing
KRATOS_DEFINE_APPLICATION_VARIABLE( ISOGEOMETRIC_APPLICATION, int, NUM_DIVISION_3 ) //number of mesh points along 3rd direction in post-processing
KRATOS_DEFINE_APPLICATION_VARIABLE( ISOGEOMETRIC_APPLICATION, int, NUM_IGA_INTEGRATION_METHOD )
KRATOS_DEFINE_APPLICATION_VARIABLE( ISOGEOMETRIC_APPLICATION, Matrix, EXTRACTION_OPERATOR )
KRATOS_DEFINE_APPLICATION_VARIABLE( ISOGEOMETRIC_APPLICATION, Matrix, EXTRACTION_OPERATOR_MCSR )
KRATOS_DEFINE_APPLICATION_VARIABLE( ISOGEOMETRIC_APPLICATION, Vector, EXTRACTION_OPERATOR_CSR_ROWPTR )
KRATOS_DEFINE_APPLICATION_VARIABLE( ISOGEOMETRIC_APPLICATION, Vector, EXTRACTION_OPERATOR_CSR_COLIND )
KRATOS_DEFINE_APPLICATION_VARIABLE( ISOGEOMETRIC_APPLICATION, Vector, EXTRACTION_OPERATOR_CSR_VALUES )
KRATOS_DEFINE_APPLICATION_VARIABLE_IMPLEMENTATION( ISOGEOMETRIC_APPLICATION, ControlPointType, CONTROL_POINT )
KRATOS_DEFINE_APPLICATION_VARIABLE_IMPLEMENTATION( ISOGEOMETRIC_APPLICATION, ComplexControlPointType, COMPLEX_CONTROL_POINT )
KRATOS_DEFINE_3D_APPLICATION_VARIABLE_WITH_COMPONENTS( ISOGEOMETRIC_APPLICATION, LOCAL_COORDINATES )
KRATOS_DEFINE_3D_APPLICATION_VARIABLE_WITH_COMPONENTS( ISOGEOMETRIC_APPLICATION, CONTROL_POINT_COORDINATES )
KRATOS_DEFINE_APPLICATION_VARIABLE( ISOGEOMETRIC_APPLICATION, double, KNOT_LEFT )
KRATOS_DEFINE_APPLICATION_VARIABLE( ISOGEOMETRIC_APPLICATION, double, KNOT_RIGHT )
KRATOS_DEFINE_APPLICATION_VARIABLE( ISOGEOMETRIC_APPLICATION, double, KNOT_TOP )
KRATOS_DEFINE_APPLICATION_VARIABLE( ISOGEOMETRIC_APPLICATION, double, KNOT_BOTTOM )
KRATOS_DEFINE_APPLICATION_VARIABLE( ISOGEOMETRIC_APPLICATION, double, KNOT_FRONT )
KRATOS_DEFINE_APPLICATION_VARIABLE( ISOGEOMETRIC_APPLICATION, double, KNOT_BACK )
KRATOS_DEFINE_APPLICATION_VARIABLE( ISOGEOMETRIC_APPLICATION, int, PATCH_INDEX )
KRATOS_DEFINE_APPLICATION_VARIABLE( ISOGEOMETRIC_APPLICATION, int, HIERARCHICAL_LEVEL )
KRATOS_DEFINE_APPLICATION_VARIABLE( ISOGEOMETRIC_APPLICATION, int, BASIS_FUNCTION_INDEX )
KRATOS_DEFINE_APPLICATION_VARIABLE( ISOGEOMETRIC_APPLICATION, int, EQUATION_INDEX )
KRATOS_DEFINE_APPLICATION_VARIABLE( ISOGEOMETRIC_APPLICATION, int, CELL_INDEX )

template<typename TDataType>
struct VariableSelector_CONTROL_POINT;

template<>
struct VariableSelector_CONTROL_POINT<double>
{
    static constexpr Variable<ControlPoint<double, double> >& Get() {return CONTROL_POINT;}
};

template<>
struct VariableSelector_CONTROL_POINT<std::complex<double> >
{
    static constexpr Variable<ControlPoint<std::complex<double>, double> >& Get() {return COMPLEX_CONTROL_POINT;}
};

}  // namespace Kratos.

#endif // KRATOS_ISOGEOMETRIC_APPLICATION_VARIABLES_H_INCLUDED  defined
